{
	"name": "CopyExcelFileToAzureSQL",
	"properties": {
		"description": "Dynamically run the Copy Data task",
		"activities": [
			{
				"name": "Copy Tables",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "List the tables to be copied",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('List the tables to be copied').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If TruncateTable",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(item().TruncateTable)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "pr_TruncateTable",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[ADF].[pr_TruncateTable]",
											"storedProcedureParameters": {
												"DatabaseName": {
													"value": {
														"value": "@Item().DestinationDatabaseName",
														"type": "Expression"
													},
													"type": "String"
												},
												"SchemaName": {
													"value": {
														"value": "@Item().DestinationSchemaName",
														"type": "Expression"
													},
													"type": "String"
												},
												"TableName": {
													"value": {
														"value": "@Item().DestinationTableName",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "DynamicAzureSqlDatabase",
											"type": "LinkedServiceReference",
											"parameters": {
												"ServerName": {
													"value": "@Item().DestinationServerName",
													"type": "Expression"
												},
												"DatabaseName": {
													"value": "@Item().DestinationDatabaseName",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "Set TaskStartTime - AzDB",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "If TruncateTable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "TaskStartTime",
								"value": {
									"value": "@convertFromUtc(utcnow(), 'GMT Standard Time')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set TaskEndTime - AzDB",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy Data From Local File System",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "TaskEndTime",
								"value": {
									"value": "@convertFromUtc(utcnow(), 'GMT Standard Time')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Execute pr_InsertTaskLogInfo - AzDB",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Set TaskEndTime - AzDB",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ADF].[pr_InsertTaskLogInfo]",
								"storedProcedureParameters": {
									"ConfigId": {
										"value": {
											"value": "@Item().ConfigId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"PipelineRunId": {
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"TaskStartTime": {
										"value": {
											"value": "@variables('TaskStartTime')",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"TaskEndTime": {
										"value": {
											"value": "@variables('TaskEndTime')",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"RowsCopied": {
										"value": {
											"value": "@activity('Copy Data From Local File System').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"RowsRead": {
										"value": {
											"value": "@activity('Copy Data From Local File System').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"DataRead": {
										"value": {
											"value": "@activity('Copy Data From Local File System').output.dataread",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"DataWritten": {
										"value": {
											"value": "@activity('Copy Data From Local File System').output.dataWritten",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"CopyDuration": {
										"value": {
											"value": "@activity('Copy Data From Local File System').output.CopyDuration",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"Throughput": {
										"value": {
											"value": "@activity('Copy Data From Local File System').output.throughput",
											"type": "Expression"
										},
										"type": "Decimal"
									},
									"IntegrationRuntime": {
										"value": {
											"value": "@activity('Copy Data From Local File System').output.effectiveIntegrationRuntime",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "DynamicAzureSqlDatabase",
								"type": "LinkedServiceReference",
								"parameters": {
									"ServerName": {
										"value": "@pipeline().parameters.ETLServerName",
										"type": "Expression"
									},
									"DatabaseName": {
										"value": "@pipeline().parameters.ETLDatabaseName",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Execute pr_InsertErrorLogInfo AzDB",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy Data From Local File System",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ADF].[pr_InsertErrorLogInfo]",
								"storedProcedureParameters": {
									"ConfigId": {
										"value": {
											"value": "@Item().ConfigId",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorCode": {
										"value": {
											"value": "@activity('Copy Data From Local File System').output.errors[0].code",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"ErrorMessage": {
										"value": {
											"value": "@activity('Copy Data From Local File System').output.errors[0].Message",
											"type": "Expression"
										},
										"type": "String"
									},
									"EventType": {
										"value": {
											"value": "@activity('Copy Data From Local File System').output.errors[0].EventType",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"EventCategory": {
										"value": {
											"value": "@activity('Copy Data From Local File System').output.errors[0].Category",
											"type": "Expression"
										},
										"type": "Int64"
									},
									"RunId": {
										"value": {
											"value": "@variables('RunId')",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"StartTime": {
										"value": {
											"value": "@variables('TaskStartTime')",
											"type": "Expression"
										},
										"type": "Datetime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "DynamicAzureSqlDatabase",
								"type": "LinkedServiceReference",
								"parameters": {
									"ServerName": {
										"value": "@pipeline().parameters.ETLServerName",
										"type": "Expression"
									},
									"DatabaseName": {
										"value": "@pipeline().parameters.ETLDatabaseName",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Copy Data From Local File System",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set TaskStartTime - AzDB",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ExcelSource",
									"additionalColumns": [
										{
											"name": "FileName",
											"value": "$$FILEPATH"
										},
										{
											"name": "LoadStart",
											"value": {
												"value": "@variables('PipelineStartTime')",
												"type": "Expression"
											}
										},
										{
											"name": "RunId",
											"value": {
												"value": "@variables('RunId')",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"tableOption": "autoCreate"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DynamicFileExcel",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@Item().Container",
											"type": "Expression"
										},
										"SubDirectory": {
											"value": "@Item().SubDirectory",
											"type": "Expression"
										},
										"FileName": {
											"value": "@concat(Item().FileName, '.', Item().FileExtension)",
											"type": "Expression"
										},
										"SheetName": {
											"value": "@Item().SheetName",
											"type": "Expression"
										},
										"Range": {
											"value": "@Item().Range",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "AzureSqlTable",
									"type": "DatasetReference",
									"parameters": {
										"ServerName": {
											"value": "@Item().DestinationServerName",
											"type": "Expression"
										},
										"DatabaseName": {
											"value": "@Item().DestinationDatabaseName",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@Item().DestinationSchemaName",
											"type": "Expression"
										},
										"TableName": {
											"value": "@Item().DestinationTableName",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Set RunId",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set StartTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunId",
					"value": {
						"value": "@pipeline().parameters.MasterRunId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set StartTime",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "PipelineStartTime",
					"value": {
						"value": "@convertFromUtc(utcnow(), 'GMT Standard Time')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set EndTime",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Copy Tables",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "PipelineEndTime",
					"value": {
						"value": "@convertFromUtc(utcnow(), 'GMT Standard Time')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set PipelineName",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set StartTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "PipelineName",
					"value": {
						"value": "@pipeline().Pipeline",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Update Pipeline LogInfo",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Set EndTime",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[ADF].[pr_InsertPipelineLogInfo]",
					"storedProcedureParameters": {
						"PipelineRunId": {
							"value": {
								"value": "@variables('RunId')",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineStartTime": {
							"value": {
								"value": "@variables('PipelineStartTime')",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"PipelineEndTime": {
							"value": {
								"value": "@variables('PipelineEndTime')",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"DataFactoryName": {
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerName": {
							"value": {
								"value": "@variables('TriggerName')",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DynamicAzureSqlDatabase",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@pipeline().parameters.ETLServerName",
							"type": "Expression"
						},
						"DatabaseName": {
							"value": "@pipeline().parameters.ETLDatabaseName",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Set TriggerName",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set StartTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "TriggerName",
					"value": {
						"value": "@pipeline().parameters.TriggerName",
						"type": "Expression"
					}
				}
			},
			{
				"name": "List the tables to be copied",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set DynamicStatement",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@variables('DynamicStatement')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable",
						"type": "DatasetReference",
						"parameters": {
							"ServerName": {
								"value": "@pipeline().parameters.ETLServerName",
								"type": "Expression"
							},
							"DatabaseName": {
								"value": "@pipeline().parameters.ETLDatabaseName",
								"type": "Expression"
							},
							"SchemaName": {
								"value": "@pipeline().parameters.ETLSchemaName",
								"type": "Expression"
							},
							"TableName": {
								"value": "@pipeline().parameters.ETLTableName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Set DynamicStatement",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set RunId",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set PipelineName",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set TriggerName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "DynamicStatement",
					"value": {
						"value": "@concat(pipeline().parameters.DynamicPipelineConfig, ' AND [LogicalGroup] = ', pipeline().parameters.LogicalGroup, ' ORDER BY LogicalOrder') ",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"DynamicPipelineConfig": {
				"type": "string",
				"defaultValue": "SELECT\t  [ConfigId], [ConfigDescription], [PipelineName], [LogicalGroup], [LogicalOrder], [TaskType], [TruncateTable], [Active],  [AzureSQLDBSourceServerType], [SourceServerName],  [SourceDatabaseName], [SourceSchemaName], [SourceTableName], [UseQuery], [UseQueryDetail],   [AzureSQLDBDestinationServerType], [DestinationServerName],  [DestinationDatabaseName], [DestinationSchemaName], [DestinationTableName],   [AzureSQLDBStoredProcServerType], [StoredProcServerName], [StoredProcDatabaseName],  [StoredProcSchema], [StoredProcName],   [FileName], [SheetName], [FileExtension], [SubDirectory], [Container], [Range]   FROM [ADF].[DynamicPipelineConfig]      WHERE [TaskType] = 'CopyFile'  AND ([FileExtension] = 'xlsx' OR [FileExtension] = 'xls') AND [Active] = 1"
			},
			"ServerName": {
				"type": "string"
			},
			"DatabaseName": {
				"type": "string"
			},
			"SchemaName": {
				"type": "string"
			},
			"TableName": {
				"type": "string"
			},
			"ETLServerName": {
				"type": "string"
			},
			"ETLDatabaseName": {
				"type": "string"
			},
			"ETLSchemaName": {
				"type": "string"
			},
			"ETLTableName": {
				"type": "string"
			},
			"LogicalGroup": {
				"type": "string",
				"defaultValue": "0"
			},
			"LogicalOrder": {
				"type": "string",
				"defaultValue": "0"
			},
			"MasterRunId": {
				"type": "string",
				"defaultValue": "00000000-0000-0000-0000-000000000000"
			},
			"TriggerName": {
				"type": "string"
			}
		},
		"variables": {
			"RunId": {
				"type": "String"
			},
			"PipelineStartTime": {
				"type": "String"
			},
			"PipelineEndTime": {
				"type": "String"
			},
			"PipelineName": {
				"type": "String"
			},
			"DataFactoryName": {
				"type": "String"
			},
			"TriggerName": {
				"type": "String"
			},
			"TaskStartTime": {
				"type": "String"
			},
			"TaskEndTime": {
				"type": "String"
			},
			"RowCount": {
				"type": "String"
			},
			"Status": {
				"type": "String"
			},
			"ErrorCode": {
				"type": "String"
			},
			"DynamicStatement": {
				"type": "String"
			}
		},
		"folder": {
			"name": "ADF Framework"
		},
		"annotations": [],
		"lastPublishTime": "2021-08-09T14:14:24Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}