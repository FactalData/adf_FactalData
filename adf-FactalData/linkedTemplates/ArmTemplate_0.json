{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-FactalData"
		},
		"AzureDataLake_FinanceFiles_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLake_FinanceFiles'"
		},
		"AzureSqlDatabase_FactalData_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_FactalData'"
		},
		"DynamicAzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DynamicAzureSqlDatabase'"
		},
		"sqldb_WBC_Data_Analytics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqldb_WBC_Data_Analytics'"
		},
		"stwbcdataanalytics_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'stwbcdataanalytics'"
		},
		"tempFactalData_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'tempFactalData'"
		},
		"ADFControlAKV_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-factaldata.vault.azure.net/"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stdatateamshared01.dfs.core.windows.net"
		},
		"AzureDataLake_FinanceFiles_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sacfactaldata01.dfs.core.windows.net"
		},
		"AzureStorageAccount_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stdatateamdev01.dfs.core.windows.net"
		},
		"WebTable_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.caravanclub.co.uk/uk-holidays/uk-search-and-book/certificated-locations/search/?Name=&SiteContentId=&County=&Town=&Postcode=&LatLong=&p=1"
		},
		"kv_WBC_DataAnalytics_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().KeyVaultName}"
		},
		"stwbcdataanalytics_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stwbcdataanalyticsprod.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADF_Process AAS Cube')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Process AAS Model",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@pipeline().parameters.ProcessAASURL",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@pipeline().parameters.ProcessAASBody",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ProcessAASBody": {
						"type": "string",
						"defaultValue": {
							"AnalysisServicesDatabaseName": "Dataplatform_Alpha_Test",
							"AnalysisServicesServer": "asazure://uksouth.asazure.windows.net/asdatateamdev01:rw",
							"DatabaseRefreshType": "Full"
						}
					},
					"ProcessAASURL": {
						"type": "string",
						"defaultValue": "https://4423c709-d203-482a-aec4-e03712fc9d4e.webhook.uks.azure-automation.net/webhooks?token=wtOEZNAEVOJGorcYpqsfHi3wx363WnRBTOlo5odndG4%3d"
					}
				},
				"folder": {
					"name": "Junk"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-09T14:36:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ContinuousRunPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WaitForMe",
						"description": "Wait for 10 seconds",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					},
					{
						"name": "Set the MomentInTime variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WaitForMe",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "MomentInTime",
							"value": {
								"value": "@convertTimeZone(utcnow(),'UTC','GMT Standard Time')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"MomentInTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PowerBiRefreshDataSet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Call Dataset Refresh",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get AAD Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://api.powerbi.com/v1.0/myorg/groups/',pipeline().parameters.PBIAppWorkspaceId,'/datasets/',pipeline().parameters.PBIDatasetId,'/refreshes')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat(string(activity('Get AAD Token').output.token_type),' ',string(activity('Get AAD Token').output.access_token))",
									"type": "Expression"
								}
							},
							"body": {
								"helloww": "worldddd"
							}
						}
					},
					{
						"name": "Get AAD Token",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get TenantId from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get ClientId from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get Secret from AKV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://login.microsoftonline.com/',activity('Get TenantId from AKV').output.value,'/oauth2/token')",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&resource=https://analysis.windows.net/powerbi/api&client_id=',activity('Get ClientId from AKV').output.value,'&client_secret=',encodeUriComponent(activity('Get Secret from AKV').output.value))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get TenantId from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_TenantId,'/',pipeline().parameters.SecretVersion_TenantId,'?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get ClientId from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_SPClientId,'/',pipeline().parameters.SecretVersion_SPClientId,'?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get Secret from AKV",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat(pipeline().parameters.KeyVaultDNSName,'secrets/',pipeline().parameters.SecretName_SPSecret,'/',pipeline().parameters.SecretVersion_SPSecret,'?api-version=7.0')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {},
							"body": {
								"simple": "body"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Until Refresh Complete",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Call Dataset Refresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals('Unknown',variables('RefreshStatus')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Dataset Refresh Status",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": true,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://api.powerbi.com/v1.0/myorg/groups/',pipeline().parameters.PBIAppWorkspaceId,'/datasets/',pipeline().parameters.PBIDatasetId,'/refreshes?$top=1')",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {
											"Authorization": {
												"value": "@concat(string(activity('Get AAD Token').output.token_type),' ',string(activity('Get AAD Token').output.access_token))",
												"type": "Expression"
											}
										},
										"body": {
											"helloww": "worldddd"
										}
									}
								},
								{
									"name": "Set RefreshStatus",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Dataset Refresh Status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RefreshStatus",
										"value": {
											"value": "@activity('Get Dataset Refresh Status').output.value[0].status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 30
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Refresh Succeeded",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Until Refresh Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('RefreshStatus'),'Completed')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set variableRefreshStatus_Fail",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RefreshStatus",
										"value": "\"Failed\""
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variableRefreshStatus",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RefreshStatus",
										"value": "\"Unknown\""
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SecretName_TenantId": {
						"type": "String",
						"defaultValue": "TenantId"
					},
					"SecretName_SPClientId": {
						"type": "String",
						"defaultValue": "ClientId"
					},
					"SecretName_SPSecret": {
						"type": "String",
						"defaultValue": "ClientSecret"
					},
					"KeyVaultDNSName": {
						"type": "string",
						"defaultValue": "https://azweu-pre-devdwh-akv-01.vault.azure.net/"
					},
					"SecretVersion_TenantId": {
						"type": "string",
						"defaultValue": "75274f9a94064a57ac95d93bfd4952c8"
					},
					"SecretVersion_SPClientId": {
						"type": "string",
						"defaultValue": "b1909cde83cf47cbb4f485371f3e69a3"
					},
					"SecretVersion_SPSecret": {
						"type": "string",
						"defaultValue": "2b126a6ba92349ad8972f0748a3d6e03"
					},
					"PBIAppWorkspaceId": {
						"type": "string",
						"defaultValue": "9019705d-997c-44f0-b8b3-d40c2c1be18c"
					},
					"PBIDatasetId": {
						"type": "string",
						"defaultValue": "42d6e2db-7f57-4503-b041-ec9d2ed9461e"
					}
				},
				"variables": {
					"RefreshStatus": {
						"type": "String",
						"defaultValue": "Unknown"
					},
					"vKeyVaultDNSName": {
						"type": "String"
					},
					"vSecretVersion_TenantId": {
						"type": "String"
					},
					"vSecretVersion_SPClientId": {
						"type": "String"
					},
					"vSecretVersion_SPSecret": {
						"type": "String"
					},
					"vPBIAppWorkspaceId": {
						"type": "String"
					},
					"vPBIDatasetId": {
						"type": "String"
					},
					"vScheduleDSRTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerBi"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-09T14:29:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SendMailPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SendMail",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-04.uksouth.logic.azure.com:443/workflows/2551e8a632d64086bded14022b3958c3/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=WbYFYRQV4bv8KwKGKnz5xSuhl8kA701GGn3zwAtthbQ",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@concat('{\"DataFactoryName\": \"', pipeline().DataFactory, '\",\"EmailTo\": \"', pipeline().parameters.EmailTo, '\",\"ErrorMessage\": \"', pipeline().parameters.ErrorMessage, '\",\"PipelineName\": \"', pipeline().Pipeline, '\",\"Subject\":\"', pipeline().parameters.Subject, '\"}')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"EmailTo": {
						"type": "string",
						"defaultValue": "david@brinn.co.uk"
					},
					"ErrorMessage": {
						"type": "string",
						"defaultValue": "Error123"
					},
					"Subject": {
						"type": "string",
						"defaultValue": "ErrorTest"
					}
				},
				"folder": {
					"name": "Junk/Dev"
				},
				"annotations": [],
				"lastPublishTime": "2021-08-03T15:04:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADFControlAKV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ADFControlAKV_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLake_FinanceFiles')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLake_FinanceFiles_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLake_FinanceFiles_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_FactalData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ServerName": {
						"type": "string",
						"defaultValue": "srv-factaldata-01.database.windows.net"
					},
					"DBName": {
						"type": "string",
						"defaultValue": "db-factaldata-01-dev"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_FactalData_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorageAccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureStorageAccount_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicAzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ServerName": {
						"type": "string"
					},
					"DatabaseName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('DynamicAzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WebTable')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Web",
				"typeProperties": {
					"url": "[parameters('WebTable_properties_typeProperties_url')]",
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/kv_WBC_DataAnalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"KeyVaultName": {
						"type": "string",
						"defaultValue": "https://kv-wbcdataanalytics-prod.vault.azure.net/"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('kv_WBC_DataAnalytics_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqldb_WBC_Data_Analytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('sqldb_WBC_Data_Analytics_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stwbcdataanalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('stwbcdataanalytics_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('stwbcdataanalytics_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tempFactalData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('tempFactalData_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-01-10T14:26:00",
						"timeZone": "GMT Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzDB_FactTransaction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_FactalData",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": "srv-factaldata-01.database.windows.net",
						"DBName": "db-factaldata-01-dev"
					}
				},
				"folder": {
					"name": "Junk"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TransactionKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CategoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DirectDebitKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "Amount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Balance",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "DWH",
					"table": "Fact_Transaction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_FactalData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzDB_NewRows')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "tempFactalData",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "MyFinance"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "DWH",
					"table": "Fact_Transaction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/tempFactalData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DynamicAzureSqlDatabase",
					"type": "LinkedServiceReference",
					"parameters": {
						"ServerName": {
							"value": "@dataset().ServerName",
							"type": "Expression"
						},
						"DatabaseName": {
							"value": "@dataset().DatabaseName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"ServerName": {
						"type": "string"
					},
					"DatabaseName": {
						"type": "string"
					},
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF Framework"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DynamicAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinaryDataDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_FinanceFiles",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MyFinance"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_FinanceFiles')]"
			]
		}
	]
}